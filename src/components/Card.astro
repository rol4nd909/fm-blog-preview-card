---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'

interface Props {
    href: string
    image: ImageMetadata
    tags: string[]
    date: string
    title: string
    body: string
    user: {
        name: string
        avatar: ImageMetadata
    }
}

const { href, image, tags, date, title, body, user } = Astro.props
---

<a
    {href}
    class="card grid gap-24 bg-neutral-100 p-24 rounded-20 border border-neutral-900 border-solid group"
    target="blank"
>
    <figure class="rounded-10 m-0 overflow-hidden h-200">
        <Image
            src={image}
            alt={title}
            width={400}
            height={200}
            class="size-full object-cover"
            loading="eager"
        />
    </figure>

    <div class="grid gap-12">
        <div class="flex flex-wrap gap-8 text-small">
            {
                tags.map((tag) => (
                    <span class="bg-primary text-neutral-900 py-4 px-12 rounded-4 font-extrabold">
                        {tag}
                    </span>
                ))
            }
        </div>

        <div class="text-small">Published <time datetime="2023-12-23">{date}</time></div>

        <h1
            class="text-heading group-hover:text-primary group-focus-visible:text-primary transition-colors duration-500 leading-standard"
        >
            {title}
        </h1>
        <p class="text-neutral-500">{body}</p>
    </div>

    <div class="flex gap-12 items-center text-base-fixed font-extrabold">
        <Image
            src={user.avatar}
            alt={user.name}
            width={32}
            height={32}
            class="rounded-full size-32"
            loading="eager"
        />
        <span>{user.name}</span>
    </div>
</a>
<style>
    @property --s {
        syntax: '<number>';
        inherits: false;
        initial-value: 0;
    }
    .card {
        --s: 0.5;

        max-inline-size: 24rem;
        text-decoration: none;
        color: var(--color-neutral-900);
        box-shadow: calc(var(--s) * 1rem) calc(var(--s) * 1rem) 0 0 var(--color-neutral-900);
        transition: --s var(--transition-bounce);

        &:is(:focus-visible) {
            --s: 1;
        }

        @media (--is-mouse) {
            &:is(:hover) {
                --s: 1;
            }
        }
    }
</style>
